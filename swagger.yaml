openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://127.0.0.1:8081
  description: Generated server url
paths:
  /users/{id}:
    get:
      tags:
      - user-rest-controller-impl
      summary: Get an instances of an entity by its id
      operationId: getInstanceById
      parameters:
      - name: id
        in: path
        description: id of the instance to be searched
        required: true
        schema:
          type: integer
          format: int32
        example: 123
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Instance not found
          content: {}
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Found the instance
          content:
            application/json: {}
    put:
      tags:
      - user-rest-controller-impl
      summary: Updates an instance of an entity if the instance exists or creates
        a new one.
      operationId: updateInstance
      parameters:
      - name: id
        in: path
        description: id of the instance to be updated
        required: true
        schema:
          type: integer
          format: int32
        example: 123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserEntity'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Updated or saved the instance
          content:
            application/json: {}
    delete:
      tags:
      - user-rest-controller-impl
      summary: Deletes an instance of an entity
      operationId: deleteInstance
      parameters:
      - name: id
        in: path
        description: id of the instance to be deleted
        required: true
        schema:
          type: integer
          format: int32
        example: 123
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Deletes the instance
  /user_roles/{id}:
    get:
      tags:
      - user-role-rest-controller-impl
      summary: Get an instances of an entity by its id
      operationId: getInstanceById_1
      parameters:
      - name: id
        in: path
        description: id of the instance to be searched
        required: true
        schema:
          type: integer
          format: int32
        example: 123
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Instance not found
          content: {}
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Found the instance
          content:
            application/json: {}
    put:
      tags:
      - user-role-rest-controller-impl
      summary: Updates an instance of an entity if the instance exists or creates
        a new one.
      operationId: updateInstance_1
      parameters:
      - name: id
        in: path
        description: id of the instance to be updated
        required: true
        schema:
          type: integer
          format: int32
        example: 123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRoleEntity'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Updated or saved the instance
          content:
            application/json: {}
    delete:
      tags:
      - user-role-rest-controller-impl
      summary: Deletes an instance of an entity
      operationId: deleteInstance_1
      parameters:
      - name: id
        in: path
        description: id of the instance to be deleted
        required: true
        schema:
          type: integer
          format: int32
        example: 123
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Deletes the instance
  /user_addresses/{id}:
    get:
      tags:
      - user-address-rest-controller-impl
      summary: Get an instances of an entity by its id
      operationId: getInstanceById_2
      parameters:
      - name: id
        in: path
        description: id of the instance to be searched
        required: true
        schema:
          type: integer
          format: int32
        example: 123
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Instance not found
          content: {}
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Found the instance
          content:
            application/json: {}
    put:
      tags:
      - user-address-rest-controller-impl
      summary: Updates an instance of an entity if the instance exists or creates
        a new one.
      operationId: updateInstance_2
      parameters:
      - name: id
        in: path
        description: id of the instance to be updated
        required: true
        schema:
          type: integer
          format: int32
        example: 123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAddressEntity'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Updated or saved the instance
          content:
            application/json: {}
    delete:
      tags:
      - user-address-rest-controller-impl
      summary: Deletes an instance of an entity
      operationId: deleteInstance_2
      parameters:
      - name: id
        in: path
        description: id of the instance to be deleted
        required: true
        schema:
          type: integer
          format: int32
        example: 123
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Deletes the instance
  /roles/{id}:
    get:
      tags:
      - role-rest-controller-impl
      summary: Get an instances of an entity by its id
      operationId: getInstanceById_3
      parameters:
      - name: id
        in: path
        description: id of the instance to be searched
        required: true
        schema:
          type: string
        example: 123
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Instance not found
          content: {}
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Found the instance
          content:
            application/json: {}
    put:
      tags:
      - role-rest-controller-impl
      summary: Updates an instance of an entity if the instance exists or creates
        a new one.
      operationId: updateInstance_3
      parameters:
      - name: id
        in: path
        description: id of the instance to be updated
        required: true
        schema:
          type: string
        example: 123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleEntity'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Updated or saved the instance
          content:
            application/json: {}
    delete:
      tags:
      - role-rest-controller-impl
      summary: Deletes an instance of an entity
      operationId: deleteInstance_3
      parameters:
      - name: id
        in: path
        description: id of the instance to be deleted
        required: true
        schema:
          type: string
        example: 123
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Deletes the instance
  /postal_codes/{id}:
    get:
      tags:
      - postal-code-rest-controller-impl
      summary: Get an instances of an entity by its id
      operationId: getInstanceById_4
      parameters:
      - name: id
        in: path
        description: id of the instance to be searched
        required: true
        schema:
          type: string
        example: 123
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Instance not found
          content: {}
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Found the instance
          content:
            application/json: {}
    put:
      tags:
      - postal-code-rest-controller-impl
      summary: Updates an instance of an entity if the instance exists or creates
        a new one.
      operationId: updateInstance_4
      parameters:
      - name: id
        in: path
        description: id of the instance to be updated
        required: true
        schema:
          type: string
        example: 123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostalCodeEntity'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Updated or saved the instance
          content:
            application/json: {}
    delete:
      tags:
      - postal-code-rest-controller-impl
      summary: Deletes an instance of an entity
      operationId: deleteInstance_4
      parameters:
      - name: id
        in: path
        description: id of the instance to be deleted
        required: true
        schema:
          type: string
        example: 123
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Deletes the instance
  /payment_statuses/{id}:
    get:
      tags:
      - payment-status-rest-controller-impl
      summary: Get an instances of an entity by its id
      operationId: getInstanceById_5
      parameters:
      - name: id
        in: path
        description: id of the instance to be searched
        required: true
        schema:
          type: string
        example: 123
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Instance not found
          content: {}
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Found the instance
          content:
            application/json: {}
    put:
      tags:
      - payment-status-rest-controller-impl
      summary: Updates an instance of an entity if the instance exists or creates
        a new one.
      operationId: updateInstance_5
      parameters:
      - name: id
        in: path
        description: id of the instance to be updated
        required: true
        schema:
          type: string
        example: 123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentStatusEntity'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Updated or saved the instance
          content:
            application/json: {}
    delete:
      tags:
      - payment-status-rest-controller-impl
      summary: Deletes an instance of an entity
      operationId: deleteInstance_5
      parameters:
      - name: id
        in: path
        description: id of the instance to be deleted
        required: true
        schema:
          type: string
        example: 123
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Deletes the instance
  /payment_methods/{id}:
    get:
      tags:
      - payment-method-rest-controller-impl
      summary: Get an instances of an entity by its id
      operationId: getInstanceById_6
      parameters:
      - name: id
        in: path
        description: id of the instance to be searched
        required: true
        schema:
          type: string
        example: 123
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Instance not found
          content: {}
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Found the instance
          content:
            application/json: {}
    put:
      tags:
      - payment-method-rest-controller-impl
      summary: Updates an instance of an entity if the instance exists or creates
        a new one.
      operationId: updateInstance_6
      parameters:
      - name: id
        in: path
        description: id of the instance to be updated
        required: true
        schema:
          type: string
        example: 123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMethodEntity'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Updated or saved the instance
          content:
            application/json: {}
    delete:
      tags:
      - payment-method-rest-controller-impl
      summary: Deletes an instance of an entity
      operationId: deleteInstance_6
      parameters:
      - name: id
        in: path
        description: id of the instance to be deleted
        required: true
        schema:
          type: string
        example: 123
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Deletes the instance
  /orders/{id}:
    get:
      tags:
      - order-rest-controller-impl
      summary: Get an instances of an entity by its id
      operationId: getInstanceById_7
      parameters:
      - name: id
        in: path
        description: id of the instance to be searched
        required: true
        schema:
          type: integer
          format: int32
        example: 123
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Instance not found
          content: {}
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Found the instance
          content:
            application/json: {}
    put:
      tags:
      - order-rest-controller-impl
      summary: Updates an instance of an entity if the instance exists or creates
        a new one.
      operationId: updateInstance_7
      parameters:
      - name: id
        in: path
        description: id of the instance to be updated
        required: true
        schema:
          type: integer
          format: int32
        example: 123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderEntity'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Updated or saved the instance
          content:
            application/json: {}
    delete:
      tags:
      - order-rest-controller-impl
      summary: Deletes an instance of an entity
      operationId: deleteInstance_7
      parameters:
      - name: id
        in: path
        description: id of the instance to be deleted
        required: true
        schema:
          type: integer
          format: int32
        example: 123
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Deletes the instance
  /order_statuses/{id}:
    get:
      tags:
      - order-status-rest-controller-impl
      summary: Get an instances of an entity by its id
      operationId: getInstanceById_8
      parameters:
      - name: id
        in: path
        description: id of the instance to be searched
        required: true
        schema:
          type: string
        example: 123
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Instance not found
          content: {}
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Found the instance
          content:
            application/json: {}
    put:
      tags:
      - order-status-rest-controller-impl
      summary: Updates an instance of an entity if the instance exists or creates
        a new one.
      operationId: updateInstance_8
      parameters:
      - name: id
        in: path
        description: id of the instance to be updated
        required: true
        schema:
          type: string
        example: 123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStatusEntity'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Updated or saved the instance
          content:
            application/json: {}
    delete:
      tags:
      - order-status-rest-controller-impl
      summary: Deletes an instance of an entity
      operationId: deleteInstance_8
      parameters:
      - name: id
        in: path
        description: id of the instance to be deleted
        required: true
        schema:
          type: string
        example: 123
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Deletes the instance
  /order_books/{id}:
    get:
      tags:
      - order-book-rest-controller-impl
      summary: Get an instances of an entity by its id
      operationId: getInstanceById_9
      parameters:
      - name: id
        in: path
        description: id of the instance to be searched
        required: true
        schema:
          type: integer
          format: int32
        example: 123
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Instance not found
          content: {}
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Found the instance
          content:
            application/json: {}
    put:
      tags:
      - order-book-rest-controller-impl
      summary: Updates an instance of an entity if the instance exists or creates
        a new one.
      operationId: updateInstance_9
      parameters:
      - name: id
        in: path
        description: id of the instance to be updated
        required: true
        schema:
          type: integer
          format: int32
        example: 123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderBookEntity'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Updated or saved the instance
          content:
            application/json: {}
    delete:
      tags:
      - order-book-rest-controller-impl
      summary: Deletes an instance of an entity
      operationId: deleteInstance_9
      parameters:
      - name: id
        in: path
        description: id of the instance to be deleted
        required: true
        schema:
          type: integer
          format: int32
        example: 123
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Deletes the instance
  /delivery_methods/{id}:
    get:
      tags:
      - delivery-method-rest-controller-impl
      summary: Get an instances of an entity by its id
      operationId: getInstanceById_10
      parameters:
      - name: id
        in: path
        description: id of the instance to be searched
        required: true
        schema:
          type: string
        example: 123
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Instance not found
          content: {}
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Found the instance
          content:
            application/json: {}
    put:
      tags:
      - delivery-method-rest-controller-impl
      summary: Updates an instance of an entity if the instance exists or creates
        a new one.
      operationId: updateInstance_10
      parameters:
      - name: id
        in: path
        description: id of the instance to be updated
        required: true
        schema:
          type: string
        example: 123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryMethodEntity'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Updated or saved the instance
          content:
            application/json: {}
    delete:
      tags:
      - delivery-method-rest-controller-impl
      summary: Deletes an instance of an entity
      operationId: deleteInstance_10
      parameters:
      - name: id
        in: path
        description: id of the instance to be deleted
        required: true
        schema:
          type: string
        example: 123
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Deletes the instance
  /countries/{id}:
    get:
      tags:
      - country-rest-controller-impl
      summary: Get an instances of an entity by its id
      operationId: getInstanceById_11
      parameters:
      - name: id
        in: path
        description: id of the instance to be searched
        required: true
        schema:
          type: string
        example: 123
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Instance not found
          content: {}
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Found the instance
          content:
            application/json: {}
    put:
      tags:
      - country-rest-controller-impl
      summary: Updates an instance of an entity if the instance exists or creates
        a new one.
      operationId: updateInstance_11
      parameters:
      - name: id
        in: path
        description: id of the instance to be updated
        required: true
        schema:
          type: string
        example: 123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CountryEntity'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Updated or saved the instance
          content:
            application/json: {}
    delete:
      tags:
      - country-rest-controller-impl
      summary: Deletes an instance of an entity
      operationId: deleteInstance_11
      parameters:
      - name: id
        in: path
        description: id of the instance to be deleted
        required: true
        schema:
          type: string
        example: 123
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Deletes the instance
  /cities/{id}:
    get:
      tags:
      - city-rest-controller-impl
      summary: Get an instances of an entity by its id
      operationId: getInstanceById_12
      parameters:
      - name: id
        in: path
        description: id of the instance to be searched
        required: true
        schema:
          type: string
        example: 123
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Instance not found
          content: {}
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Found the instance
          content:
            application/json: {}
    put:
      tags:
      - city-rest-controller-impl
      summary: Updates an instance of an entity if the instance exists or creates
        a new one.
      operationId: updateInstance_12
      parameters:
      - name: id
        in: path
        description: id of the instance to be updated
        required: true
        schema:
          type: string
        example: 123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CityEntity'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Updated or saved the instance
          content:
            application/json: {}
    delete:
      tags:
      - city-rest-controller-impl
      summary: Deletes an instance of an entity
      operationId: deleteInstance_12
      parameters:
      - name: id
        in: path
        description: id of the instance to be deleted
        required: true
        schema:
          type: string
        example: 123
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Deletes the instance
  /books/{id}:
    get:
      tags:
      - book-rest-controller-impl
      summary: Get an instances of an entity by its id
      operationId: getInstanceById_13
      parameters:
      - name: id
        in: path
        description: id of the instance to be searched
        required: true
        schema:
          type: integer
          format: int32
        example: 123
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Instance not found
          content: {}
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Found the instance
          content:
            application/json: {}
    put:
      tags:
      - book-rest-controller-impl
      summary: Updates an instance of an entity if the instance exists or creates
        a new one.
      operationId: updateInstance_13
      parameters:
      - name: id
        in: path
        description: id of the instance to be updated
        required: true
        schema:
          type: integer
          format: int32
        example: 123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookEntity'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Updated or saved the instance
          content:
            application/json: {}
    delete:
      tags:
      - book-rest-controller-impl
      summary: Deletes an instance of an entity
      operationId: deleteInstance_13
      parameters:
      - name: id
        in: path
        description: id of the instance to be deleted
        required: true
        schema:
          type: integer
          format: int32
        example: 123
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Deletes the instance
  /book_parameters_format/{id}:
    get:
      tags:
      - book-parameters-format-rest-controller-impl
      summary: Get an instances of an entity by its id
      operationId: getInstanceById_14
      parameters:
      - name: id
        in: path
        description: id of the instance to be searched
        required: true
        schema:
          type: string
        example: 123
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Instance not found
          content: {}
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Found the instance
          content:
            application/json: {}
    put:
      tags:
      - book-parameters-format-rest-controller-impl
      summary: Updates an instance of an entity if the instance exists or creates
        a new one.
      operationId: updateInstance_14
      parameters:
      - name: id
        in: path
        description: id of the instance to be updated
        required: true
        schema:
          type: string
        example: 123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookParametersFormatEntity'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Updated or saved the instance
          content:
            application/json: {}
    delete:
      tags:
      - book-parameters-format-rest-controller-impl
      summary: Deletes an instance of an entity
      operationId: deleteInstance_14
      parameters:
      - name: id
        in: path
        description: id of the instance to be deleted
        required: true
        schema:
          type: string
        example: 123
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Deletes the instance
  /book_parameters/{id}:
    get:
      tags:
      - book-parameter-rest-controller-impl
      summary: Get an instances of an entity by its id
      operationId: getInstanceById_15
      parameters:
      - name: id
        in: path
        description: id of the instance to be searched
        required: true
        schema:
          type: integer
          format: int32
        example: 123
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Instance not found
          content: {}
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Found the instance
          content:
            application/json: {}
    put:
      tags:
      - book-parameter-rest-controller-impl
      summary: Updates an instance of an entity if the instance exists or creates
        a new one.
      operationId: updateInstance_15
      parameters:
      - name: id
        in: path
        description: id of the instance to be updated
        required: true
        schema:
          type: integer
          format: int32
        example: 123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookParameterEntity'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Updated or saved the instance
          content:
            application/json: {}
    delete:
      tags:
      - book-parameter-rest-controller-impl
      summary: Deletes an instance of an entity
      operationId: deleteInstance_15
      parameters:
      - name: id
        in: path
        description: id of the instance to be deleted
        required: true
        schema:
          type: integer
          format: int32
        example: 123
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Deletes the instance
  /book_genres/{id}:
    get:
      tags:
      - book-genre-rest-controller-impl
      summary: Get an instances of an entity by its id
      operationId: getInstanceById_16
      parameters:
      - name: id
        in: path
        description: id of the instance to be searched
        required: true
        schema:
          type: string
        example: 123
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Instance not found
          content: {}
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Found the instance
          content:
            application/json: {}
    put:
      tags:
      - book-genre-rest-controller-impl
      summary: Updates an instance of an entity if the instance exists or creates
        a new one.
      operationId: updateInstance_16
      parameters:
      - name: id
        in: path
        description: id of the instance to be updated
        required: true
        schema:
          type: string
        example: 123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookGenreEntity'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Updated or saved the instance
          content:
            application/json: {}
    delete:
      tags:
      - book-genre-rest-controller-impl
      summary: Deletes an instance of an entity
      operationId: deleteInstance_16
      parameters:
      - name: id
        in: path
        description: id of the instance to be deleted
        required: true
        schema:
          type: string
        example: 123
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Deletes the instance
  /users:
    get:
      tags:
      - user-rest-controller-impl
      summary: Get all instances of an entity
      description: Retrieves a list of all instances.
      operationId: getAllInstances
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Found all instances
    post:
      tags:
      - user-rest-controller-impl
      summary: "Saves an instance of an entity into the repository or updates it,\
        \ if already exists."
      operationId: saveInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserEntity'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content: {}
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Saved or updated the instance
          content:
            application/json: {}
  /user_roles:
    get:
      tags:
      - user-role-rest-controller-impl
      summary: Get all instances of an entity
      description: Retrieves a list of all instances.
      operationId: getAllInstances_2
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Found all instances
    post:
      tags:
      - user-role-rest-controller-impl
      summary: "Saves an instance of an entity into the repository or updates it,\
        \ if already exists."
      operationId: saveInstance_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRoleEntity'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content: {}
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Saved or updated the instance
          content:
            application/json: {}
  /user_addresses:
    get:
      tags:
      - user-address-rest-controller-impl
      summary: Get all instances of an entity
      description: Retrieves a list of all instances.
      operationId: getAllInstances_3
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Found all instances
    post:
      tags:
      - user-address-rest-controller-impl
      summary: "Saves an instance of an entity into the repository or updates it,\
        \ if already exists."
      operationId: saveInstance_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAddressEntity'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content: {}
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Saved or updated the instance
          content:
            application/json: {}
  /roles:
    get:
      tags:
      - role-rest-controller-impl
      summary: Get all instances of an entity
      description: Retrieves a list of all instances.
      operationId: getAllInstances_4
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Found all instances
    post:
      tags:
      - role-rest-controller-impl
      summary: "Saves an instance of an entity into the repository or updates it,\
        \ if already exists."
      operationId: saveInstance_3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleEntity'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content: {}
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Saved or updated the instance
          content:
            application/json: {}
  /postal_codes:
    get:
      tags:
      - postal-code-rest-controller-impl
      summary: Get all instances of an entity
      description: Retrieves a list of all instances.
      operationId: getAllInstances_5
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Found all instances
    post:
      tags:
      - postal-code-rest-controller-impl
      summary: "Saves an instance of an entity into the repository or updates it,\
        \ if already exists."
      operationId: saveInstance_4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostalCodeEntity'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content: {}
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Saved or updated the instance
          content:
            application/json: {}
  /payment_statuses:
    get:
      tags:
      - payment-status-rest-controller-impl
      summary: Get all instances of an entity
      description: Retrieves a list of all instances.
      operationId: getAllInstances_7
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Found all instances
    post:
      tags:
      - payment-status-rest-controller-impl
      summary: "Saves an instance of an entity into the repository or updates it,\
        \ if already exists."
      operationId: saveInstance_5
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentStatusEntity'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content: {}
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Saved or updated the instance
          content:
            application/json: {}
  /payment_methods:
    get:
      tags:
      - payment-method-rest-controller-impl
      summary: Get all instances of an entity
      description: Retrieves a list of all instances.
      operationId: getAllInstances_9
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Found all instances
    post:
      tags:
      - payment-method-rest-controller-impl
      summary: "Saves an instance of an entity into the repository or updates it,\
        \ if already exists."
      operationId: saveInstance_6
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMethodEntity'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content: {}
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Saved or updated the instance
          content:
            application/json: {}
  /orders:
    get:
      tags:
      - order-rest-controller-impl
      summary: Get all instances of an entity
      description: Retrieves a list of all instances.
      operationId: getAllInstances_11
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Found all instances
    post:
      tags:
      - order-rest-controller-impl
      summary: "Saves an instance of an entity into the repository or updates it,\
        \ if already exists."
      operationId: saveInstance_7
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderEntity'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content: {}
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Saved or updated the instance
          content:
            application/json: {}
  /orders/withBooks:
    post:
      tags:
      - order-rest-controller-impl
      summary: "Saves a order or updates it, if already exists"
      operationId: saveInstance_8
      requestBody:
        description: Save order DTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveOrderDTO'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Saved the order
          content:
            application/json: {}
  /order_statuses:
    get:
      tags:
      - order-status-rest-controller-impl
      summary: Get all instances of an entity
      description: Retrieves a list of all instances.
      operationId: getAllInstances_13
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Found all instances
    post:
      tags:
      - order-status-rest-controller-impl
      summary: "Saves an instance of an entity into the repository or updates it,\
        \ if already exists."
      operationId: saveInstance_9
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStatusEntity'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content: {}
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Saved or updated the instance
          content:
            application/json: {}
  /order_books:
    get:
      tags:
      - order-book-rest-controller-impl
      summary: Get all instances of an entity
      description: Retrieves a list of all instances.
      operationId: getAllInstances_15
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Found all instances
    post:
      tags:
      - order-book-rest-controller-impl
      summary: "Saves an instance of an entity into the repository or updates it,\
        \ if already exists."
      operationId: saveInstance_10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderBookEntity'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content: {}
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Saved or updated the instance
          content:
            application/json: {}
  /delivery_methods:
    get:
      tags:
      - delivery-method-rest-controller-impl
      summary: Get all instances of an entity
      description: Retrieves a list of all instances.
      operationId: getAllInstances_16
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Found all instances
    post:
      tags:
      - delivery-method-rest-controller-impl
      summary: "Saves an instance of an entity into the repository or updates it,\
        \ if already exists."
      operationId: saveInstance_11
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryMethodEntity'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content: {}
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Saved or updated the instance
          content:
            application/json: {}
  /countries:
    get:
      tags:
      - country-rest-controller-impl
      summary: Get all instances of an entity
      description: Retrieves a list of all instances.
      operationId: getAllInstances_18
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Found all instances
    post:
      tags:
      - country-rest-controller-impl
      summary: "Saves an instance of an entity into the repository or updates it,\
        \ if already exists."
      operationId: saveInstance_12
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CountryEntity'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content: {}
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Saved or updated the instance
          content:
            application/json: {}
  /cities:
    get:
      tags:
      - city-rest-controller-impl
      summary: Get all instances of an entity
      description: Retrieves a list of all instances.
      operationId: getAllInstances_20
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Found all instances
    post:
      tags:
      - city-rest-controller-impl
      summary: "Saves an instance of an entity into the repository or updates it,\
        \ if already exists."
      operationId: saveInstance_13
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CityEntity'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content: {}
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Saved or updated the instance
          content:
            application/json: {}
  /books:
    get:
      tags:
      - book-rest-controller-impl
      summary: Get all instances of an entity
      description: Retrieves a list of all instances.
      operationId: getAllInstances_22
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Found all instances
    post:
      tags:
      - book-rest-controller-impl
      summary: "Saves an instance of an entity into the repository or updates it,\
        \ if already exists."
      operationId: saveInstance_14
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookEntity'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content: {}
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Saved or updated the instance
          content:
            application/json: {}
  /books/save_all:
    post:
      tags:
      - book-rest-controller-impl
      summary: Saves a list of books
      operationId: saveInstances
      requestBody:
        description: List of books
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookEntity'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Saved list of books
          content:
            application/json: {}
  /book_parameters_format:
    get:
      tags:
      - book-parameters-format-rest-controller-impl
      summary: Get all instances of an entity
      description: Retrieves a list of all instances.
      operationId: getAllInstances_24
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Found all instances
    post:
      tags:
      - book-parameters-format-rest-controller-impl
      summary: "Saves an instance of an entity into the repository or updates it,\
        \ if already exists."
      operationId: saveInstance_15
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookParametersFormatEntity'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content: {}
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Saved or updated the instance
          content:
            application/json: {}
  /book_parameters:
    get:
      tags:
      - book-parameter-rest-controller-impl
      summary: Get all instances of an entity
      description: Retrieves a list of all instances.
      operationId: getAllInstances_25
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Found all instances
    post:
      tags:
      - book-parameter-rest-controller-impl
      summary: "Saves an instance of an entity into the repository or updates it,\
        \ if already exists."
      operationId: saveInstance_16
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookParameterEntity'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content: {}
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Saved or updated the instance
          content:
            application/json: {}
  /book_genres:
    get:
      tags:
      - book-genre-rest-controller-impl
      summary: Get all instances of an entity
      description: Retrieves a list of all instances.
      operationId: getAllInstances_26
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Found all instances
    post:
      tags:
      - book-genre-rest-controller-impl
      summary: "Saves an instance of an entity into the repository or updates it,\
        \ if already exists."
      operationId: saveInstance_17
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookGenreEntity'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content: {}
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Saved or updated the instance
          content:
            application/json: {}
  /auth/register:
    post:
      tags:
      - auth-controller-impl
      summary: Registers a user
      operationId: register
      requestBody:
        description: Register request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequestDTO'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                type: object
        "400":
          description: Email is already being used
          content: {}
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: registered in the user
          content:
            application/json: {}
  /auth/login:
    post:
      tags:
      - auth-controller-impl
      summary: Logs in a user
      operationId: login
      requestBody:
        description: Login request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequestDTO'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        "404":
          description: User is not registered
          content: {}
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                type: object
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Bad credentials
          content: {}
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Logged in the user
          content:
            application/json: {}
  /users/search:
    get:
      tags:
      - user-rest-controller-impl
      summary: Retrieves a list of users
      operationId: getAllInstances_1
      parameters:
      - name: userRequestDTO
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/UserRequestDTO'
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Retrieved a list of users
          content:
            application/json: {}
  /postal_codes/search:
    get:
      tags:
      - postal-code-rest-controller-impl
      summary: Retrieves a list of postal codes
      operationId: getAllInstances_6
      parameters:
      - name: city_name
        in: query
        description: Code of the postal code
        required: false
        schema:
          type: string
          default: ""
        example: 18014
      - name: active
        in: query
        description: Active state of the postal code
        required: false
        schema:
          type: boolean
        example: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Retrieved a list of postal codes
          content:
            application/json: {}
  /payment_statuses/search:
    get:
      tags:
      - payment-status-rest-controller-impl
      summary: Retrieves a list of payment statuses
      operationId: getAllInstances_8
      parameters:
      - name: active
        in: query
        description: Active state of the payment method
        required: false
        schema:
          type: boolean
        example: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Retrieved a list of payment statuses
          content:
            application/json: {}
  /payment_methods/search:
    get:
      tags:
      - payment-method-rest-controller-impl
      summary: Retrieves a list of payment methods
      operationId: getAllInstances_10
      parameters:
      - name: active
        in: query
        description: Active state of the payment method
        required: false
        schema:
          type: boolean
        example: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Retrieved a list of payment methods
          content:
            application/json: {}
  /orders/search:
    get:
      tags:
      - order-rest-controller-impl
      summary: Retrieves a list of orders
      operationId: getAllInstances_12
      parameters:
      - name: orderRequestDTO
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/OrderRequestDTO'
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Retrieved a list of orders
          content:
            application/json: {}
  /orders/revenue:
    get:
      tags:
      - order-rest-controller-impl
      summary: Calculates the revenue generated between two dates
      operationId: calculateTotalRevenue
      parameters:
      - name: start
        in: query
        description: Start date
        required: true
        schema:
          type: string
          format: date
        example: 01-12-2023
      - name: end
        in: query
        description: End date
        required: true
        schema:
          type: string
          format: date
        example: 12-12-2023
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Calculate the total revenue
          content:
            application/json: {}
  /orders/revenueOfYearByMonths:
    get:
      tags:
      - order-rest-controller-impl
      operationId: calculateRevenuesOfYearByMonths
      parameters:
      - name: date
        in: query
        required: true
        schema:
          type: string
          format: date
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Calculate the revenue of a year from january to december
          content:
            application/json: {}
  /orders/revenueOfLast12Months:
    get:
      tags:
      - order-rest-controller-impl
      operationId: calculateRevenuesOfLast12Months
      parameters:
      - name: date
        in: query
        required: true
        schema:
          type: string
          format: date
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Calculate the revenue of the last 12 months
          content:
            application/json: {}
  /orders/generateOrderPDF/{id}:
    get:
      tags:
      - order-rest-controller-impl
      summary: "Saves a order or updates it, if already exists"
      operationId: generateOrderPDF
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Order not found
          content: {}
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Generated the PDF file
          content:
            application/pdf: {}
  /order_statuses/search:
    get:
      tags:
      - order-status-rest-controller-impl
      summary: Retrieves a list of order statuses
      operationId: getAllInstances_14
      parameters:
      - name: active
        in: query
        description: Active state of the order status
        required: false
        schema:
          type: boolean
        example: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Retrieved a list of order statuses
          content:
            application/json: {}
  /delivery_methods/search:
    get:
      tags:
      - delivery-method-rest-controller-impl
      summary: Retrieves a list of delivery methods
      operationId: getAllInstances_17
      parameters:
      - name: active
        in: query
        description: Active state of the delivery method
        required: false
        schema:
          type: boolean
        example: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Retrieved a list of delivery methods
          content:
            application/json: {}
  /countries/search:
    get:
      tags:
      - country-rest-controller-impl
      summary: Retrieves a list of countries
      operationId: getAllInstances_19
      parameters:
      - name: active
        in: query
        description: active status of the country
        required: false
        schema:
          type: boolean
        example: true
      - name: name
        in: query
        description: name of the country
        required: false
        schema:
          type: string
          default: ""
        example: Spain
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Retrieved a list of countries
          content:
            application/json: {}
  /cities/search:
    get:
      tags:
      - city-rest-controller-impl
      summary: Retrieves a list of cities
      operationId: getAllInstances_21
      parameters:
      - name: country_name
        in: query
        description: Name of the city
        required: false
        schema:
          type: string
          default: ""
        example: Granada
      - name: active
        in: query
        description: Active status of the city
        required: false
        schema:
          type: boolean
        example: "True"
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Retrieved a list of cities
          content:
            application/json: {}
  /books/top_products:
    get:
      tags:
      - book-rest-controller-impl
      summary: Retrieves the most sold products
      operationId: getTopProducts
      parameters:
      - name: limit
        in: query
        description: id of the instance to be searched
        required: true
        schema:
          type: integer
          format: int32
        example: 5
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Not authorized
          content: {}
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content: {}
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Retrieved the books
          content:
            application/json: {}
  /books/search:
    get:
      tags:
      - book-rest-controller-impl
      summary: Retrieves a list of filtered books
      operationId: getAllInstances_23
      parameters:
      - name: bookRequestDTO
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/BookRequestDTO'
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                type: object
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "405":
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Retrieved books
          content:
            application/json: {}
components:
  schemas:
    CityEntity:
      type: object
      properties:
        name:
          type: string
        countryName:
          $ref: '#/components/schemas/CountryEntity'
        active:
          type: boolean
      description: City of a country
    CountryEntity:
      type: object
      properties:
        name:
          type: string
        active:
          type: boolean
      description: Country
    PostalCodeEntity:
      type: object
      properties:
        code:
          type: string
        city:
          $ref: '#/components/schemas/CityEntity'
        active:
          type: boolean
      description: Postal code of a city
    RoleEntity:
      type: object
      properties:
        name:
          type: string
      description: Role that can be assigned to a user
    UserAddressEntity:
      type: object
      properties:
        id:
          type: integer
          format: int32
        postalCode:
          $ref: '#/components/schemas/PostalCodeEntity'
        street:
          type: string
        number:
          type: string
        active:
          type: boolean
      description: Address of a user
    UserEntity:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        surname:
          type: string
        dateOfBirth:
          type: string
          format: date
        email:
          type: string
        password:
          type: string
        active:
          type: boolean
        phone:
          type: string
        address:
          $ref: '#/components/schemas/UserAddressEntity'
        roles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UserRoleEntity'
        client:
          type: boolean
        employee:
          type: boolean
        admin:
          type: boolean
      description: User with an address
    UserRoleEntity:
      type: object
      properties:
        id:
          type: integer
          format: int32
        role:
          $ref: '#/components/schemas/RoleEntity'
        assignedDate:
          type: string
          format: date
      description: Role that is assigned to a user
    PaymentStatusEntity:
      type: object
      properties:
        name:
          type: string
        active:
          type: boolean
      description: Payment status of a order
    PaymentMethodEntity:
      type: object
      properties:
        name:
          type: string
        active:
          type: boolean
      description: Payment method of a order
    BookEntity:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
        price:
          type: number
        isbn:
          type: string
        genre:
          $ref: '#/components/schemas/BookGenreEntity'
        parameters:
          $ref: '#/components/schemas/BookParameterEntity'
        stock:
          type: integer
          format: int32
        active:
          type: boolean
        image:
          type: string
      description: A book that be bought be a user through a order
    BookGenreEntity:
      type: object
      properties:
        name:
          type: string
      description: Genre of a book
    BookParameterEntity:
      type: object
      properties:
        id:
          type: integer
          format: int32
        author:
          type: string
        format:
          $ref: '#/components/schemas/BookParametersFormatEntity'
        active:
          type: boolean
      description: "Parameters of a book, shared across multiple books"
    BookParametersFormatEntity:
      type: object
      properties:
        name:
          type: string
      description: Format of a book
    DeliveryMethodEntity:
      type: object
      properties:
        name:
          type: string
        active:
          type: boolean
      description: Delivery method of a order
    OrderBookEntity:
      type: object
      properties:
        id:
          type: integer
          format: int32
        book:
          $ref: '#/components/schemas/BookEntity'
        amount:
          type: integer
          format: int32
        total:
          type: number
      description: A book that is part of a order
    OrderEntity:
      type: object
      properties:
        id:
          type: integer
          format: int32
        user:
          $ref: '#/components/schemas/UserEntity'
        deliveryMethod:
          $ref: '#/components/schemas/DeliveryMethodEntity'
        orderStatus:
          $ref: '#/components/schemas/OrderStatusEntity'
        paymentMethod:
          $ref: '#/components/schemas/PaymentMethodEntity'
        paymentStatus:
          $ref: '#/components/schemas/PaymentStatusEntity'
        orderedBooks:
          type: array
          items:
            $ref: '#/components/schemas/OrderBookEntity'
        date:
          type: string
          format: date
        total:
          type: number
      description: A order of a user to buy several books
    OrderStatusEntity:
      type: object
      properties:
        name:
          type: string
        active:
          type: boolean
      description: Status of a order
    SaveOrderDTO:
      type: object
      properties:
        order:
          $ref: '#/components/schemas/OrderEntity'
        orderedBooks:
          type: array
          items:
            $ref: '#/components/schemas/OrderBookEntity'
      description: Data Transfer Object of a saved order without a circular reference
    Address:
      type: object
      properties:
        number:
          type: string
        postalCode:
          type: string
        street:
          type: string
      description: Simplified address of a register request
    RegisterRequestDTO:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address'
        dateOfBirth:
          type: string
          format: date
        email:
          type: string
        name:
          type: string
        password:
          type: string
        phone:
          type: string
        surname:
          type: string
      description: Data Transfer Object of a register request
    LoginRequestDTO:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      description: Data Transfer Object of a login request
    UserRequestDTO:
      type: object
      properties:
        sortType:
          type: string
        sortProperty:
          type: string
        page:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        name:
          type: string
        active:
          type: boolean
      description: A request to retrieve a filtered list of users
    OrderRequestDTO:
      type: object
      properties:
        sortType:
          type: string
        sortProperty:
          type: string
        page:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        name:
          type: string
        date:
          type: string
          format: date
        deliveryMethod:
          type: string
        orderStatus:
          type: string
        paymentMethod:
          type: string
        paymentStatus:
          type: string
      description: A request to retrieve a filtered list of orders
    BookRequestDTO:
      type: object
      properties:
        sortType:
          type: string
        sortProperty:
          type: string
        page:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        name:
          type: string
        active:
          type: boolean
        genre:
          type: string
      description: A request to retrieve a filtered list of books
